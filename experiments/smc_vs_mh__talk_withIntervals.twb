<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='smc_vs_mh' inline='true' name='textscan.41974.779866493100' version='9.0'>
      <connection class='textscan' directory='/Users/dritchie/Git/procmod/experiments' filename='smc_vs_mh.csv'>
        <relation name='smc_vs_mh#csv' table='[smc_vs_mh#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='method' ordinal='0' />
            <column datatype='integer' name='numSamps' ordinal='1' />
            <column datatype='real' name='time' ordinal='2' />
            <column datatype='real' name='avgScore' ordinal='3' />
            <column datatype='real' name='maxScore' ordinal='4' />
            <column datatype='real' name='MHavgTime' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numSamps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numSamps]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>numSamps</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avgScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgScore]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>avgScore</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maxScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[maxScore]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>maxScore</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MHavgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MHavgTime]</local-name>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias>MHavgTime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[smc_vs_mh#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Score CI Lower' datatype='real' name='[Calculation_1630803112251532]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([maxScore]) - 1.96 * (STDEV([maxScore])/SQRT(COUNT([maxScore])))' />
      </column>
      <column caption='MH Average Time' datatype='real' name='[MHavgTime]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Score CI Upper' datatype='real' name='[Max Score CI Lower (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([maxScore]) + 1.96 * (STDEV([maxScore])/SQRT(COUNT([maxScore])))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Avg Score' datatype='real' name='[avgScore]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Score' datatype='real' name='[maxScore]' role='measure' type='quantitative'>
      </column>
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;mh&quot;' value='MH' />
          <alias key='&quot;smc&quot;' value='SOSMC' />
          <alias key='&quot;smc_fixedOrder&quot;' value='SMC' />
        </aliases>
      </column>
      <column caption='Num Samps' datatype='integer' name='[numSamps]' role='measure' type='quantitative'>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[maxScore]' derivation='Avg' name='[avg:maxScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[method]' derivation='None' name='[none:method:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1630803112251532]' derivation='User' name='[usr:Calculation_1630803112251532:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max Score CI Lower (copy)]' derivation='User' name='[usr:Max Score CI Lower (copy):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:method:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;mh&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;smc_fixedOrder&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;smc_fixe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;smc&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:method:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;mh&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[avg:maxScore:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca02c'>
              <multibucket>
                <bucket>&quot;smc_fixedOrder&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[avg:maxScore:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#98df8a'>
              <multibucket>
                <bucket>&quot;smc_fixedOrder&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Calculation_1630803112251532:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#98df8a'>
              <multibucket>
                <bucket>&quot;smc_fixedOrder&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Max Score CI Lower (copy):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#aec7e8'>
              <multibucket>
                <bucket>&quot;mh&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Calculation_1630803112251532:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#aec7e8'>
              <multibucket>
                <bucket>&quot;mh&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Max Score CI Lower (copy):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff7f0e'>
              <multibucket>
                <bucket>&quot;smc&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[avg:maxScore:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbb78'>
              <multibucket>
                <bucket>&quot;smc&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Calculation_1630803112251532:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbb78'>
              <multibucket>
                <bucket>&quot;smc&quot;</bucket>
                <bucket>&quot;[textscan.41974.779866493100].[usr:Max Score CI Lower (copy):qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options export-no-caption='true' export-no-title='true' export-size-legend='false'>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='smc_vs_mh' name='textscan.41974.779866493100' />
          </datasources>
          <datasource-dependencies datasource='textscan.41974.779866493100'>
            <column caption='Max Score CI Lower' datatype='real' name='[Calculation_1630803112251532]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([maxScore]) - 1.96 * (STDEV([maxScore])/SQRT(COUNT([maxScore])))' />
            </column>
            <column caption='MH Average Time' datatype='real' name='[MHavgTime]' role='measure' type='quantitative'>
            </column>
            <column caption='Max Score CI Upper' datatype='real' name='[Max Score CI Lower (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([maxScore]) + 1.96 * (STDEV([maxScore])/SQRT(COUNT([maxScore])))' />
            </column>
            <column-instance column='[maxScore]' derivation='Avg' name='[avg:maxScore:qk]' pivot='key' type='quantitative' />
            <column caption='Max Score' datatype='real' name='[maxScore]' role='measure' type='quantitative'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;mh&quot;' value='MH' />
                <alias key='&quot;smc&quot;' value='SOSMC' />
                <alias key='&quot;smc_fixedOrder&quot;' value='SMC' />
              </aliases>
            </column>
            <column-instance column='[MHavgTime]' derivation='None' name='[none:MHavgTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[MHavgTime]' derivation='None' name='[none:MHavgTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1630803112251532]' derivation='User' name='[usr:Calculation_1630803112251532:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Max Score CI Lower (copy)]' derivation='User' name='[usr:Max Score CI Lower (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41974.779866493100].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41974.779866493100].[avg:maxScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41974.779866493100].[usr:Calculation_1630803112251532:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41974.779866493100].[usr:Max Score CI Lower (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.41974.779866493100].[none:MHavgTime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:MHavgTime:ok]' />
              <groupfilter function='member' level='[none:MHavgTime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41974.779866493100].[none:MHavgTime:ok]</column>
            <column>[textscan.41974.779866493100].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' scope='cols' value='Compute Time (s)' />
            <format attr='subtitle' class='0' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' value='bold' />
            <format attr='font-family' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' value='Helvetica' />
            <format attr='font-size' field='[textscan.41974.779866493100].[none:MHavgTime:qk]' value='16' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='16' />
            <format attr='font-family' value='Helvetica' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='16' />
            <format attr='font-family' value='Helvetica' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41974.779866493100].[none:method:nk]' />
              <color column='[textscan.41974.779866493100].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41974.779866493100].[Multiple Values]</rows>
        <cols>[textscan.41974.779866493100].[none:MHavgTime:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='6' param='[textscan.41974.779866493100].[none:method:nk]&#10;[textscan.41974.779866493100].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.41974.779866493100].[:Measure Names]</field>
          <field>[textscan.41974.779866493100].[none:numSamps:ok]</field>
          <field>[textscan.41974.779866493100].[none:time:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      Ll6dvmRNJu0yAhQDtedI7sCpohfGq9HHxJRZ1LJdBqAhCUIAuBaI4oAxRilVfYvWWilVKpUc
      xymVSpxzy7I8z+Occ85937csizG2a9euQqHwyU9+MggCx3GMMWEYOo6jtRZCuK6rlBJCJBIJ
      IYSUMplMBkGglEomk77va61TqZTneVE5dbFYBJBKpQqFAiEkmUwWi0VKaSKRKBaLjLGZjfF9
      37ZtQkgQBKtaHJc5bx8fzwdEgB88VRwris3LEgmuHceewZhSqWSMmcEY13VLpdLpxlRtsCyL
      UhoEQdWY6pWpXhDXdaWUUsrTr0z1gpzJmOoFmS9jbNsOw7CevtFcjYl+4hmMsW07ut+mGFO1
      wbZtANHNP8WYqg2JRCIMw+h+m2JMdEFmMKZ6QebLGPbZz372/CtPhBjZ99jzxes/uqPB4WL4
      jQefMZ/87fdYxhw9enSsQi6XGx4efvjhh1esWPGlL32pp6enoaHhK1/5SjabpZT+4z/+Y6FQ
      KBaLjz/++Pr16wcGBr75zW9yzru7u7/73e9mMpnXX3/9+9//fnt7+/PPP//DH/5w1apVjz32
      2E9+8pNNmzb94Ac/ePjhhy+99NJvfOMbP/vZz9773vd+5Stf2bVr1/XXX/+FL3zh+eefv+GG
      Gz73uc/96le/2rlz5xe/+MW3335706ZNf/d3f9fd3b1s2bIvfelLp06dSqfT//AP/zAyMgLg
      zjvvLBaL+Xz+61//uta6r6/vm9/8pmVZp04cefn5J9INzalMizYo+mr/O6ce+vEPu9qbH330
      kZ/+9KebN2++7777HnnkkR07dtxzzz0/+9nPrrzyyi9/+cu7du264YYbbr311hdeeOH973//
      5z//+d27d1922WVf/OIX9+3bt3Hjxttuu+3IkSOdnZ133HFHb29vKpWKjDHG3HnnnaVSKZfL
      3XPPPcaY3t7eb33rW7ZtHzx48F/+5V8aGxt/9atf3XfffV1dXc8888yPfvSjNWvWPPTQQz/9
      6U8vuuii73//+5ExX//613/+859fddVVd9xxx1NPPXXjjTd+/vOff/HFF6+99tpbb711z549
      O3bs+Ju/+Zv9+/evX7/+tttuO3r0aEdHxx133NHX15dIJL761a+Ojo4qpe666y7P88bHx++5
      5x4APT093/rWtxzHOXDgwL333tvU1PTqq6/ed999lNLvfOc7034jrfVdd91V+41OnToVHWQ2
      3+h73/veo48+WvuNvvSlLz311FMf+MAHPve5z831G0kp77rrLt/3x8bGom908uTJb3/7267r
      7t+/v/YbLVu27Omnn/7Rj360du3aBx988MEHH9y6deu999776KOPXnbZZXfffffPf/7zq6++
      +vbbb3/66advuummz372sy+99NLVV1996623vv766xdffPHf/u3fHjx4cO3atbfffvuxY8fa
      2tr+/u//fmBgwHGcr371q2NjY0KIu+++OwiC0dHRf/7nfyaEnDhx4tvf/nYikdi3b9+9997b
      3Nz8yiuv3H///cuWLdu1a9cDDzywbt26n/70pw8++OC2bdu++93vPvbYYzt37rzzzjufeOKJ
      a6655rbbbqsa8/LLL1911VV//dd//cYbb2zfvj0yZs2aNbfffvvx48dbWlq+/OUvDw4O2rb9
      ta99bXx8PAiCu+++OwzD4eHhb3zjG5TS48ePf+c730kmk2+++eb3vve91tbWl1566f7771++
      fPkTTzzx4x//eDF7wbx3Hvw//vqdv7ztf93cmhz55d3/7h+TX//2v8pMfs8se8F834+EfOGs
      PUdCqU8MeccGvYKvjIHNyfrO5Kp2N+kwGi/BGvPrymLmgBIrd2xp7X785f2nersf/cGrLTdf
      nHn3D03PSy+99Nhjj82ncfONzenGZalL1mTaGmxKEEpz4FTxreP50YLQOk4Jxfyasqg5IGfN
      p//0N27/9n23PyFI803/z/982VkfKZVKLWIh4uzpbHLSLtvfU+wfC4Q0faNh3lOXrMm0ZizO
      SLwafcyvG0ugEFF6BYGU607b/GYZghUKBSllU1PTwpg4z4RSHx/0Tgz5eV9G4diGruTKVjfp
      xuFYzK8XS2AoBk+kE4lzfPi/+uqrTz755HxZtNDYnG5antq+Jt3eYDOKUJr9PcW3ThayeSFV
      3Ekf82tEncye1dDQsNgmzJmuKBw7WRgaF4HUfSNBNhdevDrT1WzbnMbhWMyvA3UiQBs2bLgg
      ckBTSLt8x7qGY4Nez7Cf82QozVsn8l6YXNHqpl0Wa1BM3bMEQrD5YM+ePc8+++xiW3E22Jxu
      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
    </thumbnail>
  </thumbnails>
</workbook>
